//Swift Fundamentals II 
//by:Qoot Alkulaib

//Swift Fundamentals II : excersise 1
//create a loop (either for or while) that prints all of the values from 1-255

//1. variables
//1.1 index to iterate with that start from 1
var i=1

//2. loops
//2.1 while loop with a condition that stays valid until i is no longer less than 256
while i<256
{
    print(i) //print the index each time 
    i=i+1 //increment by 1 with every loop
}

//*****//
//Swift Fundamentals II : excersise 2

//create a program that prints all of the values from 1-100 that are divisible by 3 or 5 but not both
//1. variables:
//1.1 variable to store remainder of number given divided by 3
var x : Int 
//1.2 variable to store remainder of number given divided by 5
var y : Int 
//1.3 index to iterate with
var i=0   
// 1.4 a fancy array to store values requested in
var values : [String] = []

//2. loops
//2.1 while loop with a condition that stays valid until i is no longer less than 101
while i<101 {
    //2.1.1 calculate remainder of i divided by 3 and store it in x
    x = i % 3;
    //2.1.2 calculate remainder of i divided by 5 and store it in y
    y = i % 5
    
    //3. If statement 
    //3.1 an if statement with a condition that excludes numbers that are devisible by 3 and 5 at the same time
    if x != y{
        //3.2 an if statement with a condition that states the numbers divisible by 3 or 5
        if y==0 || x==0{ 
            
            //take those numbers and insert them in array values
            values.append("\(i)")
            //print that array 
            print(values)
        }
        
}
    //increment by 1 after each loop to insure the while loop is increasing until it reaches condition's limit and not crashing in itself. very critical to the success of while loop *i always leave it out and my app/device crashes with it*
    i = i+1;
    
}

    
//*****//
//Swift Fundamentals II : excersise 3

//Now modify that program to print all values from 1-100, but replace the number with "Fizz" when the number is divisible by 3, "Buzz" when the number is divisible by 5, and "FizzBuzz" when the number is divisible by both!
//1. variables:
//1.1 variable to store remainder of number given divided by 3
var x : Int 
//1.2 variable to store remainder of number given divided by 5
var y : Int 
//1.3 index to iterate with
var i=0   
// 1.4 a fancy array to store values requested in
var values : [Any] = []

//2. loops
//2.1 while loop with a condition that stays valid until i is no longer less than 101
while i<101 {
    //2.1.1 calculate remainder of i divided by 3 and store it in x
    x = i % 3;
    //2.1.2 calculate remainder of i divided by 5 and store it in y
    y = i % 5
        //3.2 an if statement with a condition that states the numbers divisible by 5
        if y==0 { 
            //store those numbers in variable *my* in order to replace them with "Buzz"
            var my = "\(values.count)";
            //turn them into strings
            var my1 = String(i)
            //insert reqested string value "Buzz" and print
            my1="Buzz"
            print(my1)
            
        }    
        //3.3 an if statement with a condition that states the numbers divisible by 3
        else if x==0{
            //store those numbers in variable *my* in order to replace them with "Fizz"
            var my = "\(values.count)";
            //turn them into strings
            var my1 = String(i)
            //insert reqested string value "Fizz" and print
            my1="Fizz"
            print(my1)
            
    }
        //3.4 an if statement with a condition that states the numbers divisible by 5 and 3
        else{
            //store those numbers in variable *my* in order to replace them with "FizzBuzz"
            var my = "\(values.count)";
            //turn them into strings
            var my1 = String(i)
            //insert reqested string value "FizzBuzz" and print
            my1="FizzBuzz"
            print(my1)
    }
    
    //increment by 1 after each loop to insure the while loop is increasing until it reaches condition's limit and not crashing in itself. very critical to the success of while loop *i always leave it out and my app/device crashes with it*
    
    i = i+1;
}
